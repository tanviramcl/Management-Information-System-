//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WebApplicationMIS.UI.ReportViewer.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NewDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewDataSet : global::System.Data.DataSet {
        
        private MarketValiationWithProfitLossDataTable tableMarketValiationWithProfitLoss;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NewDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MarketValiationWithProfitLoss"] != null)) {
                    base.Tables.Add(new MarketValiationWithProfitLossDataTable(ds.Tables["MarketValiationWithProfitLoss"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MarketValiationWithProfitLossDataTable MarketValiationWithProfitLoss {
            get {
                return this.tableMarketValiationWithProfitLoss;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NewDataSet cln = ((NewDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MarketValiationWithProfitLoss"] != null)) {
                    base.Tables.Add(new MarketValiationWithProfitLossDataTable(ds.Tables["MarketValiationWithProfitLoss"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMarketValiationWithProfitLoss = ((MarketValiationWithProfitLossDataTable)(base.Tables["MarketValiationWithProfitLoss"]));
            if ((initTable == true)) {
                if ((this.tableMarketValiationWithProfitLoss != null)) {
                    this.tableMarketValiationWithProfitLoss.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NewDataSet";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMarketValiationWithProfitLoss = new MarketValiationWithProfitLossDataTable();
            base.Tables.Add(this.tableMarketValiationWithProfitLoss);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMarketValiationWithProfitLoss() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MarketValiationWithProfitLossRowChangeEventHandler(object sender, MarketValiationWithProfitLossRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MarketValiationWithProfitLossDataTable : global::System.Data.TypedTableBase<MarketValiationWithProfitLossRow> {
            
            private global::System.Data.DataColumn columnF_CD;
            
            private global::System.Data.DataColumn columnFUND_NAME;
            
            private global::System.Data.DataColumn columnBAL_DT_CTRL;
            
            private global::System.Data.DataColumn columnTOTAL_COMPANY_PROFIT;
            
            private global::System.Data.DataColumn columnTOTAL_SHARE_PROFIT;
            
            private global::System.Data.DataColumn columnTOTAL_COST_PROFIT;
            
            private global::System.Data.DataColumn columnTOTAL_MARKET_PRICE_PROFIT;
            
            private global::System.Data.DataColumn columnPROFIT;
            
            private global::System.Data.DataColumn columnTP_PROFIT;
            
            private global::System.Data.DataColumn columnTOTAL_COMPANY_LOSS;
            
            private global::System.Data.DataColumn columnTOTAL_SHARE_LOSS;
            
            private global::System.Data.DataColumn columnTOTAL_COST_LOSS;
            
            private global::System.Data.DataColumn columnTOTAL_MARKET_PRICE_LOSS;
            
            private global::System.Data.DataColumn columnLOSS;
            
            private global::System.Data.DataColumn columnTP_LOSS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MarketValiationWithProfitLossDataTable() {
                this.TableName = "MarketValiationWithProfitLoss";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MarketValiationWithProfitLossDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MarketValiationWithProfitLossDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F_CDColumn {
                get {
                    return this.columnF_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FUND_NAMEColumn {
                get {
                    return this.columnFUND_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BAL_DT_CTRLColumn {
                get {
                    return this.columnBAL_DT_CTRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_COMPANY_PROFITColumn {
                get {
                    return this.columnTOTAL_COMPANY_PROFIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_SHARE_PROFITColumn {
                get {
                    return this.columnTOTAL_SHARE_PROFIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_COST_PROFITColumn {
                get {
                    return this.columnTOTAL_COST_PROFIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_MARKET_PRICE_PROFITColumn {
                get {
                    return this.columnTOTAL_MARKET_PRICE_PROFIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROFITColumn {
                get {
                    return this.columnPROFIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TP_PROFITColumn {
                get {
                    return this.columnTP_PROFIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_COMPANY_LOSSColumn {
                get {
                    return this.columnTOTAL_COMPANY_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_SHARE_LOSSColumn {
                get {
                    return this.columnTOTAL_SHARE_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_COST_LOSSColumn {
                get {
                    return this.columnTOTAL_COST_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_MARKET_PRICE_LOSSColumn {
                get {
                    return this.columnTOTAL_MARKET_PRICE_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOSSColumn {
                get {
                    return this.columnLOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TP_LOSSColumn {
                get {
                    return this.columnTP_LOSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MarketValiationWithProfitLossRow this[int index] {
                get {
                    return ((MarketValiationWithProfitLossRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MarketValiationWithProfitLossRowChangeEventHandler MarketValiationWithProfitLossRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MarketValiationWithProfitLossRowChangeEventHandler MarketValiationWithProfitLossRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MarketValiationWithProfitLossRowChangeEventHandler MarketValiationWithProfitLossRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MarketValiationWithProfitLossRowChangeEventHandler MarketValiationWithProfitLossRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMarketValiationWithProfitLossRow(MarketValiationWithProfitLossRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MarketValiationWithProfitLossRow AddMarketValiationWithProfitLossRow(decimal F_CD, string FUND_NAME, string BAL_DT_CTRL, decimal TOTAL_COMPANY_PROFIT, decimal TOTAL_SHARE_PROFIT, decimal TOTAL_COST_PROFIT, decimal TOTAL_MARKET_PRICE_PROFIT, decimal PROFIT, string TP_PROFIT, decimal TOTAL_COMPANY_LOSS, decimal TOTAL_SHARE_LOSS, decimal TOTAL_COST_LOSS, decimal TOTAL_MARKET_PRICE_LOSS, decimal LOSS, string TP_LOSS) {
                MarketValiationWithProfitLossRow rowMarketValiationWithProfitLossRow = ((MarketValiationWithProfitLossRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        F_CD,
                        FUND_NAME,
                        BAL_DT_CTRL,
                        TOTAL_COMPANY_PROFIT,
                        TOTAL_SHARE_PROFIT,
                        TOTAL_COST_PROFIT,
                        TOTAL_MARKET_PRICE_PROFIT,
                        PROFIT,
                        TP_PROFIT,
                        TOTAL_COMPANY_LOSS,
                        TOTAL_SHARE_LOSS,
                        TOTAL_COST_LOSS,
                        TOTAL_MARKET_PRICE_LOSS,
                        LOSS,
                        TP_LOSS};
                rowMarketValiationWithProfitLossRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMarketValiationWithProfitLossRow);
                return rowMarketValiationWithProfitLossRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MarketValiationWithProfitLossDataTable cln = ((MarketValiationWithProfitLossDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MarketValiationWithProfitLossDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnF_CD = base.Columns["F_CD"];
                this.columnFUND_NAME = base.Columns["FUND_NAME"];
                this.columnBAL_DT_CTRL = base.Columns["BAL_DT_CTRL"];
                this.columnTOTAL_COMPANY_PROFIT = base.Columns["TOTAL_COMPANY_PROFIT"];
                this.columnTOTAL_SHARE_PROFIT = base.Columns["TOTAL_SHARE_PROFIT"];
                this.columnTOTAL_COST_PROFIT = base.Columns["TOTAL_COST_PROFIT"];
                this.columnTOTAL_MARKET_PRICE_PROFIT = base.Columns["TOTAL_MARKET_PRICE_PROFIT"];
                this.columnPROFIT = base.Columns["PROFIT"];
                this.columnTP_PROFIT = base.Columns["TP_PROFIT"];
                this.columnTOTAL_COMPANY_LOSS = base.Columns["TOTAL_COMPANY_LOSS"];
                this.columnTOTAL_SHARE_LOSS = base.Columns["TOTAL_SHARE_LOSS"];
                this.columnTOTAL_COST_LOSS = base.Columns["TOTAL_COST_LOSS"];
                this.columnTOTAL_MARKET_PRICE_LOSS = base.Columns["TOTAL_MARKET_PRICE_LOSS"];
                this.columnLOSS = base.Columns["LOSS"];
                this.columnTP_LOSS = base.Columns["TP_LOSS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnF_CD = new global::System.Data.DataColumn("F_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_CD);
                this.columnFUND_NAME = new global::System.Data.DataColumn("FUND_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUND_NAME);
                this.columnBAL_DT_CTRL = new global::System.Data.DataColumn("BAL_DT_CTRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAL_DT_CTRL);
                this.columnTOTAL_COMPANY_PROFIT = new global::System.Data.DataColumn("TOTAL_COMPANY_PROFIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_COMPANY_PROFIT);
                this.columnTOTAL_SHARE_PROFIT = new global::System.Data.DataColumn("TOTAL_SHARE_PROFIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_SHARE_PROFIT);
                this.columnTOTAL_COST_PROFIT = new global::System.Data.DataColumn("TOTAL_COST_PROFIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_COST_PROFIT);
                this.columnTOTAL_MARKET_PRICE_PROFIT = new global::System.Data.DataColumn("TOTAL_MARKET_PRICE_PROFIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_MARKET_PRICE_PROFIT);
                this.columnPROFIT = new global::System.Data.DataColumn("PROFIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFIT);
                this.columnTP_PROFIT = new global::System.Data.DataColumn("TP_PROFIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTP_PROFIT);
                this.columnTOTAL_COMPANY_LOSS = new global::System.Data.DataColumn("TOTAL_COMPANY_LOSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_COMPANY_LOSS);
                this.columnTOTAL_SHARE_LOSS = new global::System.Data.DataColumn("TOTAL_SHARE_LOSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_SHARE_LOSS);
                this.columnTOTAL_COST_LOSS = new global::System.Data.DataColumn("TOTAL_COST_LOSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_COST_LOSS);
                this.columnTOTAL_MARKET_PRICE_LOSS = new global::System.Data.DataColumn("TOTAL_MARKET_PRICE_LOSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_MARKET_PRICE_LOSS);
                this.columnLOSS = new global::System.Data.DataColumn("LOSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOSS);
                this.columnTP_LOSS = new global::System.Data.DataColumn("TP_LOSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTP_LOSS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MarketValiationWithProfitLossRow NewMarketValiationWithProfitLossRow() {
                return ((MarketValiationWithProfitLossRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MarketValiationWithProfitLossRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MarketValiationWithProfitLossRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MarketValiationWithProfitLossRowChanged != null)) {
                    this.MarketValiationWithProfitLossRowChanged(this, new MarketValiationWithProfitLossRowChangeEvent(((MarketValiationWithProfitLossRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MarketValiationWithProfitLossRowChanging != null)) {
                    this.MarketValiationWithProfitLossRowChanging(this, new MarketValiationWithProfitLossRowChangeEvent(((MarketValiationWithProfitLossRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MarketValiationWithProfitLossRowDeleted != null)) {
                    this.MarketValiationWithProfitLossRowDeleted(this, new MarketValiationWithProfitLossRowChangeEvent(((MarketValiationWithProfitLossRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MarketValiationWithProfitLossRowDeleting != null)) {
                    this.MarketValiationWithProfitLossRowDeleting(this, new MarketValiationWithProfitLossRowChangeEvent(((MarketValiationWithProfitLossRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMarketValiationWithProfitLossRow(MarketValiationWithProfitLossRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MarketValiationWithProfitLossDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MarketValiationWithProfitLossRow : global::System.Data.DataRow {
            
            private MarketValiationWithProfitLossDataTable tableMarketValiationWithProfitLoss;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MarketValiationWithProfitLossRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMarketValiationWithProfitLoss = ((MarketValiationWithProfitLossDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal F_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.F_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F_CD\' in table \'MarketValiationWithProfitLoss\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.F_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FUND_NAME {
                get {
                    try {
                        return ((string)(this[this.tableMarketValiationWithProfitLoss.FUND_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FUND_NAME\' in table \'MarketValiationWithProfitLoss\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.FUND_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BAL_DT_CTRL {
                get {
                    try {
                        return ((string)(this[this.tableMarketValiationWithProfitLoss.BAL_DT_CTRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BAL_DT_CTRL\' in table \'MarketValiationWithProfitLoss\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.BAL_DT_CTRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_COMPANY_PROFIT {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_PROFITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_COMPANY_PROFIT\' in table \'MarketValiationWithProfitLo" +
                                "ss\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_PROFITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_SHARE_PROFIT {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_PROFITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_SHARE_PROFIT\' in table \'MarketValiationWithProfitLoss" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_PROFITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_COST_PROFIT {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_COST_PROFITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_COST_PROFIT\' in table \'MarketValiationWithProfitLoss\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_COST_PROFITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_MARKET_PRICE_PROFIT {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_PROFITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_MARKET_PRICE_PROFIT\' in table \'MarketValiationWithPro" +
                                "fitLoss\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_PROFITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PROFIT {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.PROFITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFIT\' in table \'MarketValiationWithProfitLoss\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.PROFITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TP_PROFIT {
                get {
                    try {
                        return ((string)(this[this.tableMarketValiationWithProfitLoss.TP_PROFITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TP_PROFIT\' in table \'MarketValiationWithProfitLoss\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TP_PROFITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_COMPANY_LOSS {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_COMPANY_LOSS\' in table \'MarketValiationWithProfitLoss" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_SHARE_LOSS {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_SHARE_LOSS\' in table \'MarketValiationWithProfitLoss\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_COST_LOSS {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_COST_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_COST_LOSS\' in table \'MarketValiationWithProfitLoss\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_COST_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOTAL_MARKET_PRICE_LOSS {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_MARKET_PRICE_LOSS\' in table \'MarketValiationWithProfi" +
                                "tLoss\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOSS {
                get {
                    try {
                        return ((decimal)(this[this.tableMarketValiationWithProfitLoss.LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOSS\' in table \'MarketValiationWithProfitLoss\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TP_LOSS {
                get {
                    try {
                        return ((string)(this[this.tableMarketValiationWithProfitLoss.TP_LOSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TP_LOSS\' in table \'MarketValiationWithProfitLoss\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableMarketValiationWithProfitLoss.TP_LOSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsF_CDNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.F_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetF_CDNull() {
                this[this.tableMarketValiationWithProfitLoss.F_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFUND_NAMENull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.FUND_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFUND_NAMENull() {
                this[this.tableMarketValiationWithProfitLoss.FUND_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBAL_DT_CTRLNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.BAL_DT_CTRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBAL_DT_CTRLNull() {
                this[this.tableMarketValiationWithProfitLoss.BAL_DT_CTRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_COMPANY_PROFITNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_PROFITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_COMPANY_PROFITNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_PROFITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_SHARE_PROFITNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_PROFITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_SHARE_PROFITNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_PROFITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_COST_PROFITNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_COST_PROFITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_COST_PROFITNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_COST_PROFITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_MARKET_PRICE_PROFITNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_PROFITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_MARKET_PRICE_PROFITNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_PROFITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPROFITNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.PROFITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPROFITNull() {
                this[this.tableMarketValiationWithProfitLoss.PROFITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTP_PROFITNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TP_PROFITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTP_PROFITNull() {
                this[this.tableMarketValiationWithProfitLoss.TP_PROFITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_COMPANY_LOSSNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_COMPANY_LOSSNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_COMPANY_LOSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_SHARE_LOSSNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_SHARE_LOSSNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_SHARE_LOSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_COST_LOSSNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_COST_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_COST_LOSSNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_COST_LOSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_MARKET_PRICE_LOSSNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_MARKET_PRICE_LOSSNull() {
                this[this.tableMarketValiationWithProfitLoss.TOTAL_MARKET_PRICE_LOSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOSSNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOSSNull() {
                this[this.tableMarketValiationWithProfitLoss.LOSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTP_LOSSNull() {
                return this.IsNull(this.tableMarketValiationWithProfitLoss.TP_LOSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTP_LOSSNull() {
                this[this.tableMarketValiationWithProfitLoss.TP_LOSSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MarketValiationWithProfitLossRowChangeEvent : global::System.EventArgs {
            
            private MarketValiationWithProfitLossRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MarketValiationWithProfitLossRowChangeEvent(MarketValiationWithProfitLossRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MarketValiationWithProfitLossRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591